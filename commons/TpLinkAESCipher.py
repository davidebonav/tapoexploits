#!/usr/bin/env python3

from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad, pad
from base64 import b64decode,b64encode

class TpLinkAESCipher:
    def __init__(self, _key, _iv):
        self.iv = _iv
        self.key = _key
        
        self.chunk_size = 76
        self.block_size = 16

    def encode(self, byte_data):
        result = []
        text = byte_data.decode()
        for i in range(0, len(text), self.chunk_size):
            result.append(text[i:i+self.chunk_size])
        final_string = '\n'.join(result) + '\n'
        return final_string

    def encrypt(self, data):
        aes = AES.new(self.key, AES.MODE_CBC, self.iv)
        encrypted = b64encode(aes.encrypt(pad(data, self.block_size)))
        return self.encode(encrypted)

    def decrypt(self, data):
        aes = AES.new(self.key, AES.MODE_CBC, self.iv)
        data = data.replace('\\n','')
        return unpad(aes.decrypt(b64decode(data)), self.block_size)