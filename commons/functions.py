#!/usr/bin/env python3

###################################################

from zlib import crc32
def mac_UDP_packet(json_payload, nonce):
   assert(len(nonce) == 4)
   
   prefix = b'\x02\x00\x00\x01\x00\x00\x11\x00\x00\x00\x00\x00Zk|\x8d'
   
   output_array = bytearray(prefix + json_payload.encode('utf-8'))
   
   output_array[4:6] = len(json_payload).to_bytes(2, 'big')
   output_array[8:12] = nonce
   output_array[12:16] = crc32(output_array).to_bytes(4, 'big')

   return bytes(output_array)

###################################################

from scapy.all import *
def re_checksum_packet(pkt):
    if pkt.haslayer(UDP):
        del pkt[UDP].len
        del pkt[UDP].chksum
    elif pkt.haslayer(TCP):
        del pkt[TCP].chksum
    
    del pkt[IP].len
    del pkt[IP].chksum

    return pkt.__class__(bytes(pkt))

###################################################